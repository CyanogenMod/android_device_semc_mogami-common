diff -uNr 431/compat-wireless-wl12xx/drivers/net/wireless/wl12xx/conf.h 587/compat-wireless-wl12xx/drivers/net/wireless/wl12xx/conf.h
--- 431/compat-wireless-wl12xx/drivers/net/wireless/wl12xx/conf.h	2012-06-10 17:35:50.000000000 +0300
+++ 587/compat-wireless-wl12xx/drivers/net/wireless/wl12xx/conf.h	2012-08-14 11:31:58.000000000 +0300
@@ -2,7 +2,6 @@
  * This file is part of wl1271
  *
  * Copyright (C) 2009 Nokia Corporation
- * Copyright (C) 2012 Sony Mobile Communications AB
  *
  * Contact: Luciano Coelho <luciano.coelho@nokia.com>
  *
@@ -934,13 +933,6 @@
 	u8 psm_entry_retries;
 
 	/*
-	 * Specifies the time in ms to wait before retrying PSM entry.
-	 *
-	 * Range 0 - 100
-	 */
-	u32 psm_entry_retry_delay;
-
-	/*
 	 * Specifies the maximum number of times to try PSM exit if it fails
 	 * (if sending the appropriate null-func message fails.)
 	 *
diff -uNr 431/compat-wireless-wl12xx/drivers/net/wireless/wl12xx/event.c 587/compat-wireless-wl12xx/drivers/net/wireless/wl12xx/event.c
--- 431/compat-wireless-wl12xx/drivers/net/wireless/wl12xx/event.c	2012-06-10 17:35:50.000000000 +0300
+++ 587/compat-wireless-wl12xx/drivers/net/wireless/wl12xx/event.c	2012-08-14 11:31:58.000000000 +0300
@@ -2,7 +2,6 @@
  * This file is part of wl1271
  *
  * Copyright (C) 2008-2009 Nokia Corporation
- * Copyright (C) 2012 Sony Mobile Communications AB
  *
  * Contact: Luciano Coelho <luciano.coelho@nokia.com>
  *
@@ -97,44 +96,12 @@
 	 */
 }
 
-void wl1271_ps_retry_work(struct work_struct *work)
-{
-	struct delayed_work *dwork;
-	struct wl1271 *wl;
-	int ret;
-
-	dwork = container_of(work, struct delayed_work, work);
-	wl = container_of(dwork, struct wl1271, ps_retry_work);
-
-	wl1271_debug(DEBUG_PSM, "ps retry work");
-
-	mutex_lock(&wl->mutex);
-
-	if (!test_bit(WL1271_FLAG_PSM, &wl->flags))
-		goto out_unlock;
-
-	ret = wl1271_ps_elp_wakeup(wl);
-	if (ret < 0)
-		goto out_unlock;
-
-	wl->psm_entry_retry++;
-	wl1271_ps_set_mode(wl, STATION_POWER_SAVE_MODE,
-			   wl->basic_rate, true);
-
-	wl1271_ps_elp_sleep(wl);
-
-
-out_unlock:
-	mutex_unlock(&wl->mutex);
-}
-
 static int wl1271_event_ps_report(struct wl1271 *wl,
 				  struct event_mailbox *mbox,
 				  bool *beacon_loss)
 {
 	int ret = 0;
 	u32 total_retries = wl->conf.conn.psm_entry_retries;
-	u32 delay = wl->conf.conn.psm_entry_retry_delay;
 
 	wl1271_debug(DEBUG_EVENT, "ps_status: 0x%x", mbox->ps_status);
 
@@ -145,15 +112,13 @@
 		if (!test_bit(WL1271_FLAG_PSM, &wl->flags)) {
 			/* remain in active mode */
 			wl->psm_entry_retry = 0;
-			cancel_delayed_work(&wl->ps_retry_work);
 			break;
 		}
 
 		if (wl->psm_entry_retry < total_retries) {
-			ieee80211_queue_delayed_work(wl->hw,
-						     &wl->ps_retry_work,
-						     msecs_to_jiffies(delay));
-
+			wl->psm_entry_retry++;
+			ret = wl1271_ps_set_mode(wl, STATION_POWER_SAVE_MODE,
+						 wl->basic_rate, true);
 		} else {
 			wl1271_info("No ack to nullfunc from AP.");
 			wl->psm_entry_retry = 0;
@@ -162,7 +127,6 @@
 		break;
 	case EVENT_ENTER_POWER_SAVE_SUCCESS:
 		wl->psm_entry_retry = 0;
-		cancel_delayed_work(&wl->ps_retry_work);
 
 		/* enable beacon filtering */
 		ret = wl1271_acx_beacon_filter_opt(wl, true);
diff -uNr 431/compat-wireless-wl12xx/drivers/net/wireless/wl12xx/event.h 587/compat-wireless-wl12xx/drivers/net/wireless/wl12xx/event.h
--- 431/compat-wireless-wl12xx/drivers/net/wireless/wl12xx/event.h	2012-06-10 17:35:50.000000000 +0300
+++ 587/compat-wireless-wl12xx/drivers/net/wireless/wl12xx/event.h	2012-08-14 11:31:58.000000000 +0300
@@ -3,7 +3,6 @@
  *
  * Copyright (C) 1998-2009 Texas Instruments. All rights reserved.
  * Copyright (C) 2008-2009 Nokia Corporation
- * Copyright (C) 2012 Sony Mobile Communications AB
  *
  * Contact: Luciano Coelho <luciano.coelho@nokia.com>
  *
@@ -135,7 +134,6 @@
 void wl1271_event_mbox_config(struct wl1271 *wl);
 int wl1271_event_handle(struct wl1271 *wl, u8 mbox);
 void wl1271_pspoll_work(struct work_struct *work);
-void wl1271_ps_retry_work(struct work_struct *work);
 
 /* Functions from main.c */
 bool wl1271_is_active_sta(struct wl1271 *wl, u8 hlid);
diff -uNr 431/compat-wireless-wl12xx/drivers/net/wireless/wl12xx/main.c 587/compat-wireless-wl12xx/drivers/net/wireless/wl12xx/main.c
--- 431/compat-wireless-wl12xx/drivers/net/wireless/wl12xx/main.c	2012-06-10 17:35:50.000000000 +0300
+++ 587/compat-wireless-wl12xx/drivers/net/wireless/wl12xx/main.c	2012-08-14 11:31:58.000000000 +0300
@@ -239,8 +239,7 @@
 		.ps_poll_recovery_period     = 700,
 		.bet_enable                  = CONF_BET_MODE_ENABLE,
 		.bet_max_consecutive         = 50,
-		.psm_entry_retries           = 20,
-		.psm_entry_retry_delay       = 20,
+		.psm_entry_retries           = 8,
 		.psm_exit_retries            = 16,
 		.psm_entry_nullfunc_retries  = 3,
 		.keep_alive_interval         = 55000,
@@ -2342,7 +2341,6 @@
 	del_timer_sync(&wl->rx_streaming_timer);
 	cancel_work_sync(&wl->rx_streaming_enable_work);
 	cancel_work_sync(&wl->rx_streaming_disable_work);
-	cancel_delayed_work_sync(&wl->ps_retry_work);
 	cancel_delayed_work_sync(&wl->pspoll_work);
 	cancel_work_sync(&wl->ap_start_work);
 	cancel_delayed_work_sync(&wl->elp_work);
@@ -5352,7 +5350,6 @@
 
 	INIT_DELAYED_WORK(&wl->elp_work, wl1271_elp_work);
 	INIT_DELAYED_WORK(&wl->pspoll_work, wl1271_pspoll_work);
-	INIT_DELAYED_WORK(&wl->ps_retry_work, wl1271_ps_retry_work);
 	INIT_WORK(&wl->netstack_work, wl1271_netstack_work);
 	INIT_WORK(&wl->tx_work, wl1271_tx_work);
 	INIT_WORK(&wl->recovery_work, wl1271_recovery_work);
diff -uNr 431/compat-wireless-wl12xx/drivers/net/wireless/wl12xx/ps.c 587/compat-wireless-wl12xx/drivers/net/wireless/wl12xx/ps.c
--- 431/compat-wireless-wl12xx/drivers/net/wireless/wl12xx/ps.c	2012-06-10 17:35:50.000000000 +0300
+++ 587/compat-wireless-wl12xx/drivers/net/wireless/wl12xx/ps.c	2012-08-14 11:31:58.000000000 +0300
@@ -2,7 +2,6 @@
  * This file is part of wl1271
  *
  * Copyright (C) 2008-2009 Nokia Corporation
- * Copyright (C) 2012 Sony Mobile Communications AB
  *
  * Contact: Luciano Coelho <luciano.coelho@nokia.com>
  *
@@ -172,9 +171,6 @@
 	default:
 		wl1271_debug(DEBUG_PSM, "leaving psm");
 
-		wl->psm_entry_retry = 0;
-		cancel_delayed_work(&wl->ps_retry_work);
-
 		/* disable beacon early termination */
 		if (wl->band == IEEE80211_BAND_2GHZ) {
 			ret = wl1271_acx_bet_enable(wl, false);
diff -uNr 431/compat-wireless-wl12xx/drivers/net/wireless/wl12xx/wl12xx.h 587/compat-wireless-wl12xx/drivers/net/wireless/wl12xx/wl12xx.h
--- 431/compat-wireless-wl12xx/drivers/net/wireless/wl12xx/wl12xx.h	2012-06-10 17:35:50.000000000 +0300
+++ 587/compat-wireless-wl12xx/drivers/net/wireless/wl12xx/wl12xx.h	2012-08-14 11:31:58.000000000 +0300
@@ -622,7 +622,6 @@
 	struct completion *ps_compl;
 	struct delayed_work elp_work;
 	struct delayed_work pspoll_work;
-	struct delayed_work ps_retry_work;
 
 	/* counter for ps-poll delivery failures */
 	int ps_poll_failures;
diff -uNr 431/compat-wireless-wl12xx/net/mac80211/mlme.c 587/compat-wireless-wl12xx/net/mac80211/mlme.c
--- 431/compat-wireless-wl12xx/net/mac80211/mlme.c	2012-06-10 17:35:50.000000000 +0300
+++ 587/compat-wireless-wl12xx/net/mac80211/mlme.c	2012-08-14 11:31:58.000000000 +0300
@@ -2204,16 +2204,13 @@
 
 static void ieee80211_restart_sta_timer(struct ieee80211_sub_if_data *sdata)
 {
-	u32 flags;
 	if (sdata->vif.type == NL80211_IFTYPE_STATION) {
 		sdata->u.mgd.flags &= ~(IEEE80211_STA_BEACON_POLL |
 					IEEE80211_STA_CONNECTION_POLL);
 
 		/* let's probe the connection once */
-		flags = sdata->local->hw.flags;
-		if (!(flags & IEEE80211_HW_CONNECTION_MONITOR))
-			ieee80211_queue_work(&sdata->local->hw,
-					     &sdata->u.mgd.monitor_work);
+		ieee80211_queue_work(&sdata->local->hw,
+			   &sdata->u.mgd.monitor_work);
 		/* and do all the other regular work too */
 		ieee80211_queue_work(&sdata->local->hw, &sdata->work);
 	}
